调用方式：
1. 在系统中的main函数中首先调用

// 初始化Consul, 确定连接了正确的服务器环境（本地测试，北美测试服务器，或者是生产服务器）
ConsulManager.startService("chat",args, 1000 * 30); // 启动连接Consul服务

2. 在后面的接口中，直接调用BaseService0类的函数。
a) 获取serviceName服务中的可用服务器信息
/**
 * 从某个服务的consul服务器列表中，获取可用列表中随机选一个，如果没可用的，则返回null。
 * @param serviceName 某个服务的名称。
 * @return 返回某个服务的的可用连接信息。
 */
public static SocketInfo getActiveServer(String serviceName) ;

b) 报告serviceName服务中有异常的服务器信息
/**
 * 报告有异常的账户服务器，该服务器将记录在异常服务器列表中，当用户获取账户服务器时，则过滤掉该服务器。
 * 记录服务器的信息为(ip+port)的方式来代表一台服务器。
 * @param addr 有异常的服务器名称。
 * @param addr 有异常的服务器的IP地址。
 * @param port 有异常的服务器的Port端口。
 */
public static void reportErrorServer(String serviceName, String addr, int port);


c)获取consul服务器中的K-V信息

/**
 * 获取consul中K-V键值信息。
 * @param key 键的名称。
 * @return 对应键的值。
 */
public static String getProperty(String key);


4)本地配置文件信息样本(属于服务发现的配置信息，都是以前缀 "service_"开头,中间部分为服务名称，结尾是"addr"和"port")
wk_android_appSecret=Sb7UjyqxPXv6Vnw7Pa04btfDnsslHnEu
health_check_port=19006
redis_user_addr=192.168.1.245:6379
redis_user_auth=

service_account_addr=192.168.1.245
service_account_port=9002
service_social_addr=192.168.1.245
service_social_port=9008

service_login_addr=192.168.1.245
service_login_port=9001
service_news_addr=192.168.1.245
service_news_port=9004
service_oss_addr=192.168.1.245
service_oss_port=9003